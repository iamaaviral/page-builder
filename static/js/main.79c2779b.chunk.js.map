{"version":3,"sources":["context.js","components/form/index.js","components/leftPane/index.js","components/rightPane/index.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","listItem","window","localStorage","getItem","PageContext","props","state","showForm","edit","selectedIndex","formInput","type","text","x","y","size","weight","itemList","JSON","parse","setItemList","newArray","setState","setItem","stringify","setSelectedIndex","onDrop","delItemList","i","splice","editForm","toggleForm","setFormValue","name","value","setForm","setEdit","Provider","this","children","Component","ContextHOC","SomeComponent","Consumer","val","Form","formRoot","document","getElementById","ReactDOM","createPortal","className","onClick","onChange","e","target","Canvas","id","onDragOver","event","stopPropagation","preventDefault","clientX","clientY","map","list","index","onKeyDown","keyCode","key","handleKeyPress","tabIndex","draggable","onDragStart","style","position","left","top","fontSize","fontWeight","onDrag","App","LeftPane","Components","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.79c2779b.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Context = React.createContext(\"page\");\nlet listItem = window.localStorage.getItem(\"listItem\");\n\nclass PageContext extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showForm: false,\n      edit: false,\n      selectedIndex: null,\n      formInput: {\n        type: \"\",\n        text: \"\",\n        x: 0,\n        y: 0,\n        size: 16,\n        weight: 400,\n      },\n      itemList: listItem !== null ? JSON.parse(listItem) : [],\n\n      setItemList: () => {\n        if (this.state.edit) {\n          let newArray = [...this.state.itemList];\n          newArray[this.state.selectedIndex] = this.state.formInput;\n          this.setState(\n            {\n              itemList: newArray,\n              edit: false,\n            },\n            () =>\n              window.localStorage.setItem(\n                \"listItem\",\n                JSON.stringify(this.state.itemList)\n              )\n          );\n        } else {\n          this.setState(\n            {\n              itemList: [\n                ...this.state.itemList,\n                {\n                  type: this.state.formInput.type,\n                  text: this.state.formInput.text,\n                  x: this.state.formInput.x,\n                  y: this.state.formInput.y,\n                  size: this.state.formInput.size,\n                  weight: this.state.formInput.weight,\n                },\n              ],\n              edit: false,\n            },\n            () =>\n              window.localStorage.setItem(\n                \"listItem\",\n                JSON.stringify(this.state.itemList)\n              )\n          );\n        }\n        this.state.setSelectedIndex(null);\n      },\n\n      onDrop: (x, y) => {\n        let newArray = [...this.state.itemList];\n        newArray[this.state.selectedIndex].x = x;\n        newArray[this.state.selectedIndex].y = y;\n        this.setState({\n          itemList: newArray,\n          edit: false,\n        });\n        this.state.setSelectedIndex(null);\n        window.localStorage.setItem(\n          \"listItem\",\n          JSON.stringify(this.state.itemList)\n        );\n      },\n\n      delItemList: (i) => {\n        let newArray = this.state.itemList;\n        newArray.splice(i, 1);\n        this.setState({\n          itemList: newArray,\n        });\n        this.state.setSelectedIndex(null);\n        window.localStorage.setItem(\n          \"listItem\",\n          JSON.stringify(this.state.itemList)\n        );\n      },\n\n      editForm: () => {\n        this.setState({\n          formInput: this.state.itemList[this.state.selectedIndex],\n        });\n      },\n\n      toggleForm: () => {\n        this.setState((state) => {\n          return {\n            showForm: !state.showForm,\n          };\n        });\n      },\n\n      setSelectedIndex: (i) => {\n        this.setState({\n          selectedIndex: i,\n        });\n      },\n\n      setFormValue: (name, value) => {\n        this.setState({\n          formInput: { ...this.state.formInput, [name]: value },\n        });\n      },\n\n      setForm: (x, y) => {\n        this.setState({\n          formInput: { ...this.state.formInput, x: x, y: y },\n        });\n      },\n\n      setEdit: (value) => {\n        this.setState({\n          edit: value,\n        });\n      },\n    };\n  }\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nconst ContextHOC = (SomeComponent, props) => {\n  return (\n    <Context.Consumer>\n      {(val) => <SomeComponent {...val} {...props} />}\n    </Context.Consumer>\n  );\n};\n\nexport { ContextHOC, Context, PageContext };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.scss\";\n\nconst Form = (props) => {\n  const save = () => {\n    props.setItemList();\n    props.toggleForm();\n  };\n\n  const formRoot = document.getElementById(\"form-root\");\n  return ReactDOM.createPortal(\n    <div className=\"form-wrapper\">\n      <div className=\"form-container\">\n        <div className=\"header\">\n          {`Edit  ${\n            props.formInput.type === \"p\" ? \"Label\" : props.formInput.type\n          }`}\n          <span\n            className=\"close\"\n            onClick={() => {\n              props.toggleForm();\n              props.setSelectedIndex(null);\n            }}\n          >\n            x\n          </span>\n        </div>\n        <div className=\"field\">\n          <div className=\"title\">Text</div>\n          <input\n            name=\"text\"\n            onChange={(e) => props.setFormValue(e.target.name, e.target.value)}\n            value={props.formInput.text}\n          />\n        </div>\n        <div className=\"field\">\n          <div className=\"title\">X</div>\n          <input\n            name=\"x\"\n            onChange={(e) => props.setFormValue(e.target.name, e.target.value)}\n            value={props.formInput.x}\n          />\n        </div>\n        <div className=\"field\">\n          <div className=\"title\">Y</div>\n          <input\n            name=\"y\"\n            onChange={(e) => props.setFormValue(e.target.name, e.target.value)}\n            value={props.formInput.y}\n          />\n        </div>\n        <div className=\"field\">\n          <div className=\"title\">Font Size</div>\n          <input\n            name=\"size\"\n            onChange={(e) => props.setFormValue(e.target.name, e.target.value)}\n            value={props.formInput.size}\n          />\n        </div>\n        <div className=\"field\">\n          <div className=\"title\">Font Weight</div>\n          <input\n            name=\"weight\"\n            onChange={(e) => props.setFormValue(e.target.name, e.target.value)}\n            value={props.formInput.weight}\n          />\n        </div>\n        <div className=\"field\">\n          <div className=\"btn\" onClick={() => save()}>\n            Save changes\n          </div>\n        </div>\n      </div>\n    </div>,\n    formRoot\n  );\n};\n\nexport default Form;\n","import React from \"react\";\nimport { ContextHOC } from \"../../context\";\nimport Form from \"../form\";\nimport \"./index.scss\";\n\nconst Canvas = (props) => {\n  const handleKeyPress = (e, i) => {\n    if (e.keyCode === 46) {\n      props.delItemList(i);\n      props.setEdit(false);\n    }\n    if (e.key === \"Enter\") {\n      props.editForm();\n      props.toggleForm();\n    }\n  };\n  return (\n    <>\n      <div\n        className=\"canvas-wrapper\"\n        id=\"canvas\"\n        onDragOver={(event) => {\n          event.stopPropagation();\n          event.preventDefault();\n        }}\n        onDrop={(event) => {\n          if (!props.edit) {\n            props.setForm(event.clientX, event.clientY);\n            props.toggleForm();\n          } else {\n            props.onDrop(event.clientX, event.clientY);\n          }\n        }}\n      >\n        {props.itemList.map((list, index) => {\n          return (\n            <list.type\n              className={`each-list ${\n                props.selectedIndex === index ? \"selected\" : \"\"\n              }`}\n              onClick={() => {\n                props.setEdit(true);\n                props.setSelectedIndex(index);\n              }}\n              onKeyDown={(e) => {\n                handleKeyPress(e, index);\n              }}\n              tabIndex={props.type === \"p\" ? 0 : 1}\n              draggable={true}\n              onDragStart={() => {\n                props.setEdit(true);\n                props.setSelectedIndex(index);\n              }}\n              id={index}\n              key={index}\n              style={{\n                position: \"absolute\",\n                left: `${list.x}px`,\n                top: `${list.y}px`,\n                fontSize: `${list.size}px`,\n                fontWeight: list.weight,\n              }}\n            >\n              {list.type !== \"input\" ? list.text : null}\n            </list.type>\n          );\n        })}\n      </div>\n      {props.showForm ? ContextHOC(Form) : null}\n    </>\n  );\n};\n\nexport default Canvas;\n","import React from \"react\";\nimport \"./index.scss\";\n\nconst Component = (props) => {\n  const onDrag = (id) => {\n    props.setFormValue(\"type\", id);\n    props.setEdit(false);\n  };\n\n  return (\n    <div className=\"comp-wrapper\">\n      <div className=\"header\">BLOCKS</div>\n      <div\n        className=\"comp-item\"\n        draggable=\"true\"\n        id=\"p\"\n        onDragStart={(e) => onDrag(e.target.id)}\n      >\n        Label\n      </div>\n      <div\n        className=\"comp-item\"\n        draggable=\"true\"\n        id=\"input\"\n        onDragStart={(e) => onDrag(e.target.id)}\n      >\n        Input\n      </div>\n      <div\n        className=\"comp-item\"\n        draggable=\"true\"\n        id=\"button\"\n        onDragStart={(e) => onDrag(e.target.id)}\n      >\n        Button\n      </div>\n    </div>\n  );\n};\nexport default Component;\n","import React from \"react\";\nimport \"./App.css\";\nimport LeftPane from \"./components/leftPane\";\nimport Components from \"./components/rightPane\";\nimport { ContextHOC } from \"./context\";\n\nfunction App(props) {\n  return (\n    <div className=\"App\">\n      {ContextHOC(LeftPane)}\n      {ContextHOC(Components)}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {PageContext, Context} from './context'\n\nReactDOM.render(\n  <React.StrictMode>\n    <PageContext>\n        <Context.Consumer>{val => <App {...val} />}</Context.Consumer>\n    </PageContext>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}