{"version":3,"sources":["context.js","components/form/index.js","components/leftPane/index.js","components/rightPane/index.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","listItem","window","localStorage","getItem","PageContext","props","state","showForm","edit","selectedIndex","formInput","type","text","x","y","size","weight","itemList","JSON","parse","setItemList","newArray","setState","setItem","stringify","setSelectedIndex","onDrop","delItemList","i","splice","editForm","toggleForm","setText","e","setSize","setWeight","setx","sety","setForm","setType","setEdit","value","Provider","this","children","Component","ContextHOC","SomeComponent","Consumer","val","Form","formRoot","document","getElementById","ReactDOM","createPortal","className","onClick","onChange","target","Canvas","id","onDragOver","event","stopPropagation","preventDefault","clientX","clientY","map","list","index","onKeyDown","keyCode","key","handleKeyPress","tabIndex","draggable","onDragStart","style","position","left","top","fontSize","fontWeight","onDrag","App","LeftPane","Components","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.3860571a.chunk.js","sourcesContent":["import React from 'react';\n\nconst Context = React.createContext('page');\nlet listItem = window.localStorage.getItem('listItem');\n\nclass PageContext extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            showForm: false,\n            edit: false,\n            selectedIndex: null,\n           formInput: {\n                type: '',\n               text: '',\n               x: 0,\n               y: 0,\n               size: 16,\n               weight: 400\n           },\n           itemList: listItem !== null ? JSON.parse(listItem) : [],\n           setItemList: () => {\n               if(this.state.edit) {\n                let newArray = [...this.state.itemList];\n                newArray[this.state.selectedIndex] = this.state.formInput;\n                this.setState({\n                    itemList: newArray,\n                    edit: false\n                },() => window.localStorage.setItem('listItem', JSON.stringify(this.state.itemList)))\n               } else {\n                   this.setState({\n                           itemList: [...this.state.itemList, {\n                             type: this.state.formInput.type, \n                             text: this.state.formInput.text,\n                             x: this.state.formInput.x,\n                             y: this.state.formInput.y,\n                             size: this.state.formInput.size,\n                             weight: this.state.formInput.weight,\n                           }],\n                           edit: false\n                   }, () => window.localStorage.setItem('listItem', JSON.stringify(this.state.itemList)))\n               }\n               this.state.setSelectedIndex(null)\n           },\n           onDrop: (x,y) => {\n            let newArray = [...this.state.itemList];\n            newArray[this.state.selectedIndex].x = x;\n            newArray[this.state.selectedIndex].y = y;\n            this.setState({\n                itemList: newArray,\n                edit: false\n            })\n            this.state.setSelectedIndex(null)\n            window.localStorage.setItem('listItem', JSON.stringify(this.state.itemList));\n           },\n           delItemList: (i) => {\n               let newArray = this.state.itemList;\n               newArray.splice(i,1)\n                this.setState({\n                    itemList: newArray\n                })\n                this.state.setSelectedIndex(null)\n            window.localStorage.setItem('listItem', JSON.stringify(this.state.itemList));\n           },\n           editForm: () => {\n            this.setState({\n                formInput: this.state.itemList[this.state.selectedIndex]\n            })\n           },\n           toggleForm: () => {\n               this.setState(state => {\n                return {\n                    showForm: !state.showForm\n                };\n              })\n           },\n           setSelectedIndex: (i) => {\n            this.setState({\n                selectedIndex: i\n            })\n           },\n           setText: (e) => {\n            this.setState({\n                formInput: {...this.state.formInput, text: e}\n            })\n           },\n           setSize: (e) => {\n            this.setState({\n                formInput: {...this.state.formInput, size: e}\n            })\n           },\n           setWeight: (e) => {\n            this.setState({\n                formInput: {...this.state.formInput, weight: e}\n            })\n           },\n           setx: (e) => {\n            this.setState({\n                formInput: {...this.state.formInput, x: e}\n            })\n           },\n           sety: (e) => {\n            this.setState({\n                formInput: {...this.state.formInput, y: e}\n            })\n           },\n           setForm: (x,y) => {\n               this.setState({\n                   formInput: {...this.state.formInput, x:x, y:y}\n               })\n           },\n           setType: (type) => {\n            this.setState({\n                formInput: {...this.state.formInput, type:type}\n                })\n           },\n           setEdit: (value) => {\n               this.setState({\n                   edit: value\n               })\n           }\n        }\n    }\n    render() {\n        return (\n            <Context.Provider value={this.state}>\n                {this.props.children}\n            </Context.Provider>\n        );\n    }\n}\n\nconst ContextHOC = (SomeComponent, props) => {\n    return (\n        <Context.Consumer>\n            {val => <SomeComponent {...val} {...props} />}\n        </Context.Consumer>\n    );\n};\n\nexport {\n    ContextHOC,\n    Context,\n    PageContext\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.scss\";\n\nconst Form = (props) => {\n    const save = () => {\n        props.setItemList()\n        props.toggleForm()\n    }\n\n  const formRoot = document.getElementById(\"form-root\");\n  return ReactDOM.createPortal(\n    <div className=\"form-wrapper\">\n      <div className=\"form-container\">\n        <div className=\"header\">{`Edit  ${props.formInput.type}`}<span className=\"close\" onClick={() => {props.toggleForm();props.setSelectedIndex(null)}}>x</span></div>\n        <div className=\"field\">\n          <div className=\"title\">Text</div>\n          <input onChange={(e) => props.setText(e.target.value)} value={props.formInput.text}/>\n        </div>\n        <div className=\"field\">\n          <div className=\"title\">X</div>\n          <input onChange={(e) => props.setx(e.target.value)} value={props.formInput.x}/>\n        </div>\n        <div className=\"field\">\n          <div className=\"title\">Y</div>\n          <input onChange={(e) => props.sety(e.target.value)} value={props.formInput.y}/>\n        </div>\n        <div className=\"field\">\n          <div className=\"title\">Font Size</div>\n          <input onChange={(e) => props.setSize(e.target.value)} value={props.formInput.size}/>\n        </div>\n        <div className=\"field\">\n          <div className=\"title\">Font Weight</div>\n          <input onChange={(e) => props.setWeight(e.target.value)} value={props.formInput.weight}/>\n        </div>\n        <div className=\"field\">\n            <div className=\"btn\" onClick={() => save()}>Save changes</div>\n        </div>\n      </div>\n    </div>,\n    formRoot\n  );\n};\n\nexport default Form;\n","import React from 'react'\nimport { ContextHOC } from '../../context';\nimport Form from '../form';\nimport './index.scss'\n\nconst Canvas = (props) => {\n\n    const handleKeyPress = (e,i) => {\n        if(e.keyCode === 46) {\n            props.delItemList(i)\n            props.setEdit(false)\n        }\n        if(e.key === 'Enter') {\n            props.editForm()\n            props.toggleForm()\n        }\n    }\n    return(\n        <>\n        <div className=\"canvas-wrapper\"  id=\"canvas\"\n        onDragOver={(event) => {\n            event.stopPropagation();\n            event.preventDefault();\n        }}\n        onDrop= {(event) => {\n            if(!props.edit) {\n                props.setForm(event.clientX, event.clientY)\n                props.toggleForm()\n            } else {\n                props.onDrop(event.clientX , event.clientY)\n            }\n        }}>\n            {props.itemList.map((list, index) => {\n            return <list.type\n                        className={`each-list ${props.selectedIndex === index ? 'selected' : ''}`}\n                        onClick={() => {props.setEdit(true); props.setSelectedIndex(index)}}\n                        onKeyDown={(e) => {handleKeyPress(e,index)}}\n                        tabIndex={props.type === \"p\" ? 0 : 1}\n                        draggable={true}\n                        onDragStart={() => {props.setEdit(true); props.setSelectedIndex(index)}}\n                        id={index}\n                        key={index}\n                        style={{\n                            position: 'absolute',\n                            left: `${list.x}px`,\n                            top: `${list.y}px`,\n                            fontSize: `${list.size}px`,\n                            fontWeight: list.weight\n                        }}>{list.type  !== 'input' ? list.text : null}</list.type>\n        })}\n        </div>\n        {props.showForm ? ContextHOC(Form): null }\n        </>\n    )\n}\n\nexport default Canvas","import React from 'react'\nimport './index.scss'\n\nconst Component = (props) => {\n\n    const onDrag = (id) => {\n        props.setType(id);\n        props.setEdit(false);\n    }\n\n    return(\n        <div className=\"comp-wrapper\">\n            <div className=\"header\">BLOCKS</div>\n            <div className=\"comp-item\" draggable=\"true\" id=\"p\" onDragStart={(e) => onDrag(e.target.id)}>Label</div>\n            <div className=\"comp-item\" draggable=\"true\" id=\"input\" onDragStart={(e) => onDrag(e.target.id)}>Input</div>\n            <div className=\"comp-item\" draggable=\"true\" id=\"button\" onDragStart={(e) => onDrag(e.target.id)}>Button</div>\n        </div>\n    )\n}\nexport default Component","import React from 'react';\nimport './App.css';\nimport LeftPane from './components/leftPane'\nimport Components from './components/rightPane'\nimport { ContextHOC } from './context';\n\nfunction App(props) {\n  return (\n    <div className=\"App\">\n      {ContextHOC(LeftPane)}\n      {ContextHOC(Components)}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {PageContext, Context} from './context'\n\nReactDOM.render(\n  <React.StrictMode>\n    <PageContext>\n        <Context.Consumer>{val => <App {...val} />}</Context.Consumer>\n    </PageContext>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}